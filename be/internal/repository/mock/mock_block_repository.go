// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	entity "BE_Friends_Management/internal/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockBlockRelationshipRepository is a mock of BlockRelationshipRepository interface.
type MockBlockRelationshipRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBlockRelationshipRepositoryMockRecorder
}

// MockBlockRelationshipRepositoryMockRecorder is the mock recorder for MockBlockRelationshipRepository.
type MockBlockRelationshipRepositoryMockRecorder struct {
	mock *MockBlockRelationshipRepository
}

// NewMockBlockRelationshipRepository creates a new mock instance.
func NewMockBlockRelationshipRepository(ctrl *gomock.Controller) *MockBlockRelationshipRepository {
	mock := &MockBlockRelationshipRepository{ctrl: ctrl}
	mock.recorder = &MockBlockRelationshipRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlockRelationshipRepository) EXPECT() *MockBlockRelationshipRepositoryMockRecorder {
	return m.recorder
}

// CreateBlockRelationship mocks base method.
func (m *MockBlockRelationshipRepository) CreateBlockRelationship(tx *gorm.DB, requestorId, targetId int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBlockRelationship", tx, requestorId, targetId)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBlockRelationship indicates an expected call of CreateBlockRelationship.
func (mr *MockBlockRelationshipRepositoryMockRecorder) CreateBlockRelationship(tx, requestorId, targetId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBlockRelationship", reflect.TypeOf((*MockBlockRelationshipRepository)(nil).CreateBlockRelationship), tx, requestorId, targetId)
}

// GetBlockRelationship mocks base method.
func (m *MockBlockRelationshipRepository) GetBlockRelationship(requestorId, targetId int64) (*entity.BlockRelationship, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockRelationship", requestorId, targetId)
	ret0, _ := ret[0].(*entity.BlockRelationship)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockRelationship indicates an expected call of GetBlockRelationship.
func (mr *MockBlockRelationshipRepositoryMockRecorder) GetBlockRelationship(requestorId, targetId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockRelationship", reflect.TypeOf((*MockBlockRelationshipRepository)(nil).GetBlockRelationship), requestorId, targetId)
}

// GetDB mocks base method.
func (m *MockBlockRelationshipRepository) GetDB() *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDB")
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// GetDB indicates an expected call of GetDB.
func (mr *MockBlockRelationshipRepositoryMockRecorder) GetDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDB", reflect.TypeOf((*MockBlockRelationshipRepository)(nil).GetDB))
}
