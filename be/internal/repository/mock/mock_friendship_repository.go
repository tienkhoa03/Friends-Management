// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFriendshipRepository is a mock of FriendshipRepository interface.
type MockFriendshipRepository struct {
	ctrl     *gomock.Controller
	recorder *MockFriendshipRepositoryMockRecorder
}

// MockFriendshipRepositoryMockRecorder is the mock recorder for MockFriendshipRepository.
type MockFriendshipRepositoryMockRecorder struct {
	mock *MockFriendshipRepository
}

// NewMockFriendshipRepository creates a new mock instance.
func NewMockFriendshipRepository(ctrl *gomock.Controller) *MockFriendshipRepository {
	mock := &MockFriendshipRepository{ctrl: ctrl}
	mock.recorder = &MockFriendshipRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFriendshipRepository) EXPECT() *MockFriendshipRepositoryMockRecorder {
	return m.recorder
}

// CreateFriendship mocks base method.
func (m *MockFriendshipRepository) CreateFriendship(userId1, userId2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFriendship", userId1, userId2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFriendship indicates an expected call of CreateFriendship.
func (mr *MockFriendshipRepositoryMockRecorder) CreateFriendship(userId1, userId2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFriendship", reflect.TypeOf((*MockFriendshipRepository)(nil).CreateFriendship), userId1, userId2)
}

// RetrieveFriendsList mocks base method.
func (m *MockFriendshipRepository) RetrieveFriendsList(userId int64) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveFriendsList", userId)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveFriendsList indicates an expected call of RetrieveFriendsList.
func (mr *MockFriendshipRepositoryMockRecorder) RetrieveFriendsList(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveFriendsList", reflect.TypeOf((*MockFriendshipRepository)(nil).RetrieveFriendsList), userId)
}
