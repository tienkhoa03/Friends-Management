// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFriendshipService is a mock of FriendshipService interface.
type MockFriendshipService struct {
	ctrl     *gomock.Controller
	recorder *MockFriendshipServiceMockRecorder
}

// MockFriendshipServiceMockRecorder is the mock recorder for MockFriendshipService.
type MockFriendshipServiceMockRecorder struct {
	mock *MockFriendshipService
}

// NewMockFriendshipService creates a new mock instance.
func NewMockFriendshipService(ctrl *gomock.Controller) *MockFriendshipService {
	mock := &MockFriendshipService{ctrl: ctrl}
	mock.recorder = &MockFriendshipServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFriendshipService) EXPECT() *MockFriendshipServiceMockRecorder {
	return m.recorder
}

// CreateFriendship mocks base method.
func (m *MockFriendshipService) CreateFriendship(email1, email2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFriendship", email1, email2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFriendship indicates an expected call of CreateFriendship.
func (mr *MockFriendshipServiceMockRecorder) CreateFriendship(email1, email2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFriendship", reflect.TypeOf((*MockFriendshipService)(nil).CreateFriendship), email1, email2)
}
