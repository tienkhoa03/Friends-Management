definitions:
  dto.ApiResponseSuccessNoData:
    properties:
      success:
        type: boolean
    type: object
  dto.ApiResponseSuccessStruct:
    properties:
      data:
        example: "null"
        type: string
      message:
        example: Success
        type: string
    type: object
  dto.ApiResponseSuccessWithFriendsList:
    properties:
      count:
        type: integer
      friends:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  dto.CreateBlockRequest:
    properties:
      requestor:
        type: string
      target:
        type: string
    required:
    - requestor
    - target
    type: object
  dto.CreateFriendshipRequest:
    properties:
      friends:
        items:
          type: string
        type: array
    required:
    - friends
    type: object
  dto.CreateSubscriptionRequest:
    properties:
      requestor:
        type: string
      target:
        type: string
    required:
    - requestor
    - target
    type: object
info:
  contact: {}
paths:
  /api/block:
    post:
      consumes:
      - application/json
      description: Create new block relationship
      parameters:
      - description: Requestor's email and target's email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBlockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessNoData'
      summary: Create new block relationship
      tags:
      - BlockRelationship
  /api/friendship:
    post:
      consumes:
      - application/json
      description: Create new friendship
      parameters:
      - description: List of 2 friend emails
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateFriendshipRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessNoData'
      summary: Create new friendship
      tags:
      - Friendship
  /api/friendship/common-friends:
    get:
      consumes:
      - application/json
      description: Retrieve common friends list between two email addresses
      parameters:
      - description: Email address of user 1
        in: query
        name: email1
        required: true
        type: string
      - description: Email address of user 2
        in: query
        name: email2
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessWithFriendsList'
      summary: Retrieve common friends list between two email addresses
      tags:
      - Friendship
  /api/friendship/friends:
    get:
      consumes:
      - application/json
      description: Retrieve friends list for an email address
      parameters:
      - description: Email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessWithFriendsList'
      summary: Retrieve friends list for an email address
      tags:
      - Friendship
  /api/subscription:
    post:
      consumes:
      - application/json
      description: Create new subscription
      parameters:
      - description: Requestor's email and target's email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessNoData'
      summary: Create new subscription
      tags:
      - Subscription
  /api/users:
    get:
      consumes:
      - application/json
      description: Get all user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Get all user
      tags:
      - Users
    post:
      consumes:
      - multipart/form-data
      description: Create new user
      parameters:
      - description: User Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Create new user
      tags:
      - Users
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Get user by ID
      tags:
      - Users
    put:
      consumes:
      - multipart/form-data
      description: Update user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: User's New Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Update user
      tags:
      - Users
swagger: "2.0"
